library(topicmodels)
library(tm)
library(tidytext)
library(ggplot2)
library(dplyr)
library(tidyr)
disk <- "" #(C: or nothing)
user <- "Nico"
setwd(paste(disk, "/Users/", user, "/Dropbox/DataPiche/Political_Clusters_Project/Input"
, sep = ""))
twitter_feeds <- read.csv(paste("twitter_feed_scrape.csv", sep = ""))
View(twitter_feeds)
View(twitter_feeds)
twitter_feeds <- read.csv(paste("twitter_feed_scrape.csv", sep = ""))
View(twitter_feeds)
twitter_feeds <- read.csv(paste("twitter_feed_scrape.csv", sep = ""))
data("AssociatedPress")
ap_lda <- LDA(AssociatedPress, k = 2, control = list(seed = 1234))
ap_topics <- tidy(ap_lda, matrix = "beta")
ap_topics
install.packages(stringr)
install.packages("stringr")
install.packages("stringr")
library(stringr)
%>%
a %>% b
1 %>% 2
replace_reg <- "https://t.co/[A-Za-z\\d]+|http://[A-Za-z\\d]+|&amp;|&lt;|&gt;|RT|https"
unnest_reg <- "([^A-Za-z_\\d#@']|'(?![A-Za-z_\\d#@]))"
setwd("/Users/Nico/Downloads")
tweets <- read.csv("tweets.csv")
View(tweets)
replace_reg <- "https://t.co/[A-Za-z\\d]+|http://[A-Za-z\\d]+|&amp;|&lt;|&gt;|RT|https"
unnest_reg <- "([^A-Za-z_\\d#@']|'(?![A-Za-z_\\d#@]))"
tidy_tweets <- tweets %>%
filter(!str_detect(text, "^RT")) %>%
mutate(text = str_replace_all(text, replace_reg, "")) %>%
unnest_tokens(word, text, token = "regex", pattern = unnest_reg) %>%
filter(!word %in% stop_words$word,
str_detect(word, "[a-z]"))
View(tidy_tweets)
tidy_tweets <- tweets %>%
#  filter(!str_detect(text, "^RT")) %>%
mutate(text = str_replace_all(text, replace_reg, "")) %>%
unnest_tokens(word, text, token = "regex", pattern = unnest_reg) %>%
filter(!word %in% stop_words$word,
str_detect(word, "[a-z]"))
View(tidy_tweets)
stop_words
View(tweets)
tidy_tweets <- tweets %>%
filter(!str_detect(text, "^RT")) %>%
#  mutate(text = str_replace_all(text, replace_reg, "")) %>%
#  unnest_tokens(word, text, token = "regex", pattern = unnest_reg) %>%
#  filter(!word %in% stop_words$word,
#         str_detect(word, "[a-z]"))
quit
tidy_tweets <- tweets
%>% filter(!str_detect(text, "^RT"))
%>%  mutate(text = str_replace_all(text, replace_reg, ""))
%>%  unnest_tokens(word, text, token = "regex", pattern = unnest_reg)
%>%  filter(!word %in% stop_words$word,
str_detect(word, "[a-z]"))
tidy_tweets <- tweets %>%
#  filter(!str_detect(text, "^RT")) %>%
#  mutate(text = str_replace_all(text, replace_reg, "")) %>%
unnest_tokens(word, text, token = "regex", pattern = unnest_reg) %>%
filter(!word %in% stop_words$word,
str_detect(word, "[a-z]"))
View(tidy_tweets)
text <- c("Because I could not stop for Death -",
"He kindly stopped for me -",
"The Carriage held but just Ourselves -",
"and Immortality")
text
text <- c(["Because I could not stop for Death -", 1],
["He kindly stopped for me -", 2],
["The Carriage held but just Ourselves -", 3],
["and Immortality",4])
text_df <- data_frame(line = 1:4, text = text)
View(text_df)
text_df
text_df.unnest_tokens(word, text)
unnest_tokens(words, text)
unnest_tokens(words, text_df)
View(text_df)
unnest_tokens(words, text_df['text'])
View(text_df)
unnest_tokens(words, tbl = text_df['text'])
unnest_tokens(words, tbl = text_df, input = text_df['text'])
unnest_tokens(tbl = text_df, input = text_df['text'], output = text_df['words'])
unnest_tokens(text_df, input = text_df['text'], output = text_df['words'])
text_df %>% unnest_tokens(word, text)
install.packages("gutenbergr")
library(gutenbergr)
hgwells <- gutenberg_download(c(35, 36, 5230, 159))
tidy_hgwells <- hgwells %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
View(hgwells)
tidy_hgwells %>%
count(word, sort = TRUE)
View(tidy_hgwells)
hgwells <- gutenberg_download(c(35, 36, 5230, 159))
tidy_hgwells <- hgwells %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_hgwells %>%
count(word, sort = TRUE)
bronte <- gutenberg_download(c(1260, 768, 969, 9182, 767))
tidy_bronte <- bronte %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
tidy_bronte %>%
count(word, sort = TRUE)
install.packages("janeaustenr")
install.packages("janeaustenr")
library(janeaustenr)
original_books <- austen_books() %>%
group_by(book) %>%
mutate(linenumber = row_number(),
chapter = cumsum(str_detect(text, regex("^chapter [\\divxlc]",
ignore_case = TRUE)))) %>%
ungroup()
tidy_books <- original_books %>%
unnest_tokens(word, text)
tidy_books <- tidy_books %>%
anti_join(stop_words)
frequency <- bind_rows(mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Brontë Sisters`:`H.G. Wells`)
frequency <- bind_rows(mutate(tidy_bronte, author = "Brontë Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) #%>%
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Bronte Sisters`:`H.G. Wells`)
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) #%>%
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) #%>%
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) #%>%
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) #%>%
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) #%>%
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) #%>%
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) #%>%
View(frequency)
View(bronte)
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Bronte Sisters`:`H.G. Wells`)
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) #%>%
#  spread(author, proportion) %>%
#  gather(author, proportion, `Bronte Sisters`:`H.G. Wells`)
View(frequency)
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) #%>%
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) #%>%
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) #%>%
select(-n) #%>%
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) #%>%
View(frequency)
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) #%>%
View(frequency)
install.packages("scales")
install.packages("scales")
library(scales)
View(frequency)
ggplot(frequency, aes(x = proportion, y = `Jane Austen`, color = abs(`Jane Austen` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Jane Austen", x = NULL)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) #%>%
gather(author, proportion, `Bronte Sisters`:`H.G. Wells`)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) #%>%
gather(author, proportion, `Bronte Sisters`:`H.G. Wells`)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Bronte Sisters`:`H.G. Wells`)
ggplot(frequency, aes(x = proportion, y = `Jane Austen`, color = abs(`Jane Austen` - proportion))) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = word), check_overlap = TRUE, vjust = 1.5) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_gradient(limits = c(0, 0.001), low = "darkslategray4", high = "gray75") +
facet_wrap(~author, ncol = 2) +
theme(legend.position="none") +
labs(y = "Jane Austen", x = NULL)
View(frequency)
frequency <- bind_rows(mutate(tidy_bronte, author = "Bronte Sisters"),
mutate(tidy_hgwells, author = "H.G. Wells"),
mutate(tidy_books, author = "Jane Austen")) %>%
mutate(word = str_extract(word, "[a-z']+")) %>%
count(author, word) %>%
group_by(author) %>%
mutate(proportion = n / sum(n)) %>%
select(-n) %>%
spread(author, proportion) %>%
gather(author, proportion, `Bronte Sisters`:`H.G. Wells`)
#######################
# Factorial Analysis
#######################
#install.packages("plyr")
#install.packages("xlsx")
#install.packages("stringi")
#install.packages("ggplot2")
library(plyr)
library(xlsx)
library(stringi)
library(ggplot2)
disk <- ""
user <- "Nico"
congress_num <- "115"
session <- "1"
setwd(paste(disk, "/Users/", user, "/Dropbox/DataPiche/Political_Clusters_Project/Input"
, sep = ""))
# Import data
senate_votes <- read.csv(paste("Senate_Votes_", congress_num, "_", session, ".csv", sep = ""))
nb_votes = dim(senate_votes)[2]-3
sen_info = senate_votes[,c(1:3)]
votes = senate_votes[,c(1, 4:dim(senate_votes)[2])]
# Add 2016 Presidential Results
results_2016 <- read.xlsx("2016_Election_Results.xlsx", 1)
results_2016['State_Winner_2016'] <-
ifelse(results_2016['Trump.pct']>results_2016['Clinton.pct'], "Trump", "Clinton")
results_2016 <- results_2016[,c('State', 'State_Winner_2016')]
sen_info <- merge(sen_info, results_2016, by.x = "Senator_State", by.y = "State", all.x=TRUE)
results_2008 <- read.xlsx("2008_Election_Results.xlsx", 1)
results_2008['State_Winner_2008'] <-
ifelse(results_2008['McCain.pct']>results_2008['Obama.pct'], "McCain", "Obama")
results_2008 <- results_2008[,c('State', 'State_Winner_2008')]
sen_info <- merge(sen_info, results_2008, by.x = "Senator_State", by.y = "State", all.x=TRUE)
sen_info = sen_info[, c('Senator_Name','Senator_Party','Senator_State','State_Winner_2016', 'State_Winner_2008')]
info_vars = dim(sen_info)[2]
data = merge(sen_info, votes, by = "Senator_Name", all = TRUE)
#Exclude Sessions and Strange
data = data[rowSums(abs(data[, c((info_vars+1):dim(senate_votes)[2])]))
> 0.8*nb_votes
,]
#Restrict to Democratic Candidates?
#data <- data[which(data$Senator_Party == "D" | data$Senator_Party == "I"),]
#Restrict to active/projected variables
sen_info <- data[,c(1:info_vars)]
data.active <- data[,-c(1:info_vars)]
scale_factor <- 1
out_factor <- 1
##########################################################################
# All Senators Analysis
##########################################################################
#Scale the matrix
data.scaled.indv <- data.active
#We create the correlation matrix
data.correl.indv <- (1/length(data.active[,1]))*
t(data.scaled.indv)%*%as.matrix(data.scaled.indv)
#Eigen-values and vectors
data.eig.indv <- eigen(data.correl.indv)
eigenvalues.indv <- as.data.frame(data.eig.indv$values
/ sum(data.eig.indv$values))
plot(eigenvalues.indv)
eigenvectors.indv <- as.data.frame(data.eig.indv$vectors)
numberDimension <- 5
axes <- matrix(nrow=numberDimension, ncol=1)
for (i in 1:numberDimension){
axes[i] <- paste("PCA Axis", i)
}
eigenvectors.indv <- eigenvectors.indv[,c(1:numberDimension)]
# New dataset:
c.alpha.indv <- as.matrix(data.scaled.indv) %*% as.matrix(eigenvectors.indv)
colnames(c.alpha.indv) <- axes
senator_coordinates = cbind(sen_info, c.alpha.indv)
# Contribution of the Votes to PCA Axes
d.alpha <- matrix(nrow=length(data.active[1,]), ncol=numberDimension)
for (i in 1:length(data.active[1,])){
for (j in 1:numberDimension){
d.alpha[i,j] <- cor(data.active[,i],c.alpha.indv[,j])
}
}
d.alpha[is.na(d.alpha)] <- 0
colnames(d.alpha) <- axes
contrib.var <- matrix(nrow=length(data.active[1,]),
ncol=numberDimension)
for (i in 1:length(data.active[1,])){
for (j in 1:numberDimension){
contrib.var[i,j] <- (d.alpha[i,j]*d.alpha[i,j])/sum(d.alpha[,j]*d.alpha[,j])
}
}
colnames(contrib.var) <- axes
# Export
setwd(paste(disk
, "/Users/"
, user
, "/Dropbox/Nico/Work/Code/Political_Clusters_Project/Output/Intermediate_Outputs"
, sep = ""))
write.table(senator_coordinates
, file = paste("Senator_Votes_PCA_", congress_num, "_", session, ".csv", sep = "")
, row.names = FALSE)
################################
######  Plot:
################################
party <- data.frame(matrix(ncol = 0, nrow = dim(data)[1]))
party$name = senator_coordinates$Senator_Party
party$color = ifelse(party == "R", "red"
, ifelse(party == "D", "blue"
,ifelse(party == "I", "green"
, "black")))
State_Winner_2016 <- data.frame(matrix(ncol = 0, nrow = dim(data)[1]))
State_Winner_2016$name = senator_coordinates$State_Winner_2016
State_Winner_2016$color = ifelse(State_Winner_2016 == "Trump", "red"
,ifelse(State_Winner_2016 == "Clinton", "blue"
, "black"))
# Choose to color by party or 2016 winner
color_var = party
# Axis 1-2
plot(senator_coordinates[,c("PCA Axis 1","PCA Axis 2")],
col = color_var$color)
text(c.alpha.indv[,c("PCA Axis 1","PCA Axis 2")],
labels=senator_coordinates$Senator_Name,
cex= 0.5, pos = 3,
col = color_var$color)
install.packages("xlsx")
library(plyr)
library(xlsx)
library(stringi)
library(ggplot2)
disk <- ""
user <- "Nico"
congress_num <- "115"
session <- "1"
setwd(paste(disk, "/Users/", user, "/Dropbox/DataPiche/Political_Clusters_Project/Input"
, sep = ""))
senate_votes <- read.csv(paste("Senate_Votes_", congress_num, "_", session, ".csv", sep = ""))
nb_votes = dim(senate_votes)[2]-3
sen_info = senate_votes[,c(1:3)]
votes = senate_votes[,c(1, 4:dim(senate_votes)[2])]
results_2016 <- read.xlsx("2016_Election_Results.xlsx", 1)
install.packages("rJava")
install.packages("xlsx")
library(xlsx)
library(rJava)
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
Sys.setenv(JAVA_HOME="/Library/Java")
library(rJava)
View(data.scaled.indv)
library(xlsx)
