sen_info = sen_info[, c('Senator_Name','Senator_Party','Senator_State','State_Winner_2016', 'State_Winner_2008')]
library(plyr)
library(xlsx)
library(stringi)
library(ggplot2)
disk <- ""
user <- "Nico"
congress_num <- "115"
session <- "1"
election_results_year <- "2008" #What general election year do you want to consider ?
setwd(paste(disk, "/Users/", user, "/Dropbox/Nico/Work/Code/Political_Clusters_Project/Input"
, sep = ""))
# Import data
senate_votes <- read.csv(paste("Senate_Votes_", congress_num, "_", session, ".csv", sep = ""))
senate_votes$X <- NULL
nb_votes = dim(senate_votes)[2]-3
sen_info = senate_votes[,c(1:3)]
votes = senate_votes[,c(1, 4:dim(senate_votes)[2])]
# Add 2016 Presidential Results
results_2016 <- read.xlsx("2016_Election_Results.xlsx", 1)
results_2016['State_Winner_2016'] <-
ifelse(results_2016['Trump.pct']>results_2016['Clinton.pct'], "Trump", "Clinton")
results_2016 <- results_2016[,c('State', 'State_Winner_2016')]
sen_info <- merge(sen_info, results_2016, by.x = "Senator_State", by.y = "State", all.x=TRUE)
results_2008 <- read.xlsx("2008_Election_Results.xlsx", 1)
results_2008['State_Winner_2008'] <-
ifelse(results_2008['McCain.pct']>results_2008['Obama.pct'], "McCain", "Obama")
results_2008 <- results_2008[,c('State', 'State_Winner_2008')]
sen_info <- merge(sen_info, results_2008, by.x = "Senator_State", by.y = "State", all.x=TRUE)
setwd(paste(disk, "/Users/", user, "/Dropbox/Nico/Work/Code/Political_Clusters_Project/Input"
, sep = ""))
senate_votes <- read.csv(paste("Senate_Votes_", congress_num, "_", session, ".csv", sep = ""))
library(plyr)
library(xlsx)
library(stringi)
library(ggplot2)
disk <- ""
user <- "Nico"
congress_num <- "111"
session <- "1"
setwd(paste(disk, "/Users/", user, "/Dropbox/Nico/Work/Code/Political_Clusters_Project/Input"
, sep = ""))
# Import data
senate_votes <- read.csv(paste("Senate_Votes_", congress_num, "_", session, ".csv", sep = ""))
senate_votes$X <- NULL
nb_votes = dim(senate_votes)[2]-3
sen_info = senate_votes[,c(1:3)]
votes = senate_votes[,c(1, 4:dim(senate_votes)[2])]
results_2016 <- read.xlsx("2016_Election_Results.xlsx", 1)
results_2016 <- read.csv("2016_Election_Results.csv", sep = "")
results_2016 <- read.csv("2016_Election_Results.csv", sep = ",")
results_2016 <- read.xlsx("2016_Election_Results.xlsx", 1)
results_2016['State_Winner_2016'] <-
ifelse(results_2016['Trump.pct']>results_2016['Clinton.pct'], "Trump", "Clinton")
results_2016 <- results_2016[,c('State', 'State_Winner_2016')]
sen_info <- merge(sen_info, results_2016, by.x = "Senator_State", by.y = "State", all.x=TRUE)
results_2008 <- read.xlsx("2008_Election_Results.xlsx", 1)
results_2008['State_Winner_2008'] <-
ifelse(results_2008['McCain.pct']>results_2008['Obama.pct'], "McCain", "Obama")
results_2008 <- results_2008[,c('State', 'State_Winner_2008')]
sen_info <- merge(sen_info, results_2008, by.x = "Senator_State", by.y = "State", all.x=TRUE)
sen_info = sen_info[, c('Senator_Name','Senator_Party','Senator_State','State_Winner_2016', 'State_Winner_2008')]
View(sen_info)
View(senate_votes)
View(sen_info)
info_vars = dim(sen_info)[2]
data = merge(sen_info, votes, by = "Senator_Name", all = TRUE)
data = data[rowSums(abs(data[, c((info_vars+1):dim(senate_votes)[2])]))
> 0.8*nb_votes
,]
sen_info <- data[,c(1:info_vars)]
data.active <- data[,-c(1:info_vars)]
#######################
# Factorial Analysis
#######################
#install.packages("plyr")
#install.packages("xlsx")
#install.packages("stringi")
#install.packages("ggplot2")
library(plyr)
library(xlsx)
library(stringi)
library(ggplot2)
disk <- ""
user <- "Nico"
congress_num <- "111"
session <- "1"
setwd(paste(disk, "/Users/", user, "/Dropbox/Nico/Work/Code/Political_Clusters_Project/Input"
, sep = ""))
# Import data
senate_votes <- read.csv(paste("Senate_Votes_", congress_num, "_", session, ".csv", sep = ""))
senate_votes$X <- NULL
nb_votes = dim(senate_votes)[2]-3
sen_info = senate_votes[,c(1:3)]
votes = senate_votes[,c(1, 4:dim(senate_votes)[2])]
# Add 2016 Presidential Results
results_2016 <- read.xlsx("2016_Election_Results.xlsx", 1)
results_2016['State_Winner_2016'] <-
ifelse(results_2016['Trump.pct']>results_2016['Clinton.pct'], "Trump", "Clinton")
results_2016 <- results_2016[,c('State', 'State_Winner_2016')]
sen_info <- merge(sen_info, results_2016, by.x = "Senator_State", by.y = "State", all.x=TRUE)
results_2008 <- read.xlsx("2008_Election_Results.xlsx", 1)
results_2008['State_Winner_2008'] <-
ifelse(results_2008['McCain.pct']>results_2008['Obama.pct'], "McCain", "Obama")
results_2008 <- results_2008[,c('State', 'State_Winner_2008')]
sen_info <- merge(sen_info, results_2008, by.x = "Senator_State", by.y = "State", all.x=TRUE)
sen_info = sen_info[, c('Senator_Name','Senator_Party','Senator_State','State_Winner_2016', 'State_Winner_2008')]
info_vars = dim(sen_info)[2]
data = merge(sen_info, votes, by = "Senator_Name", all = TRUE)
#Exclude Sessions and Strange
data = data[rowSums(abs(data[, c((info_vars+1):dim(senate_votes)[2])]))
> 0.8*nb_votes
,]
#Restrict to Democratic Candidates?
#data <- data[which(data$Senator_Party == "D" | data$Senator_Party == "I"),]
#Restrict to active/projected variables
sen_info <- data[,c(1:info_vars)]
data.active <- data[,-c(1:info_vars)]
scale_factor <- 1
out_factor <- 1
##########################################################################
# All Senators Analysis
##########################################################################
#Scale the matrix
data.scaled.indv <- data.active
#We create the correlation matrix
data.correl.indv <- (1/length(data.active[,1]))*
t(data.scaled.indv)%*%as.matrix(data.scaled.indv)
#Eigen-values and vectors
data.eig.indv <- eigen(data.correl.indv)
eigenvalues.indv <- as.data.frame(data.eig.indv$values
/ sum(data.eig.indv$values))
plot(eigenvalues.indv)
eigenvectors.indv <- as.data.frame(data.eig.indv$vectors)
numberDimension <- 5
axes <- matrix(nrow=numberDimension, ncol=1)
for (i in 1:numberDimension){
axes[i] <- paste("PCA Axis", i)
}
eigenvectors.indv <- eigenvectors.indv[,c(1:numberDimension)]
# New dataset:
c.alpha.indv <- as.matrix(data.scaled.indv) %*% as.matrix(eigenvectors.indv)
colnames(c.alpha.indv) <- axes
senator_coordinates = cbind(sen_info, c.alpha.indv)
# Contribution of the Votes to PCA Axes
d.alpha <- matrix(nrow=length(data.active[1,]), ncol=numberDimension)
for (i in 1:length(data.active[1,])){
for (j in 1:numberDimension){
d.alpha[i,j] <- cor(data.active[,i],c.alpha.indv[,j])
}
}
d.alpha[is.na(d.alpha)] <- 0
colnames(d.alpha) <- axes
contrib.var <- matrix(nrow=length(data.active[1,]),
ncol=numberDimension)
for (i in 1:length(data.active[1,])){
for (j in 1:numberDimension){
contrib.var[i,j] <- (d.alpha[i,j]*d.alpha[i,j])/sum(d.alpha[,j]*d.alpha[,j])
}
}
colnames(contrib.var) <- axes
# Export
setwd(paste(disk
, "/Users/"
, user
, "/Dropbox/Nico/Work/Code/Political_Clusters_Project/Output/Intermediate_Outputs"
, sep = ""))
write.table(senator_coordinates
, file = paste("Senator_Votes_PCA_", congress_num, "_", session, ".csv", sep = "")
, row.names = FALSE)
################################
######  Plot:
################################
party <- data.frame(matrix(ncol = 0, nrow = dim(data)[1]))
party$name = senator_coordinates$Senator_Party
party$color = ifelse(party == "R", "red"
, ifelse(party == "D", "blue"
,ifelse(party == "I", "green"
, "black")))
State_Winner_2016 <- data.frame(matrix(ncol = 0, nrow = dim(data)[1]))
State_Winner_2016$name = senator_coordinates$State_Winner_2016
State_Winner_2016$color = ifelse(State_Winner_2016 == "Trump", "red"
,ifelse(State_Winner_2016 == "Clinton", "blue"
, "black"))
# Choose to color by party or 2016 winner
color_var = party
# Axis 1-2
plot(senator_coordinates[,c("PCA Axis 1","PCA Axis 2")],
col = color_var$color)
text(c.alpha.indv[,c("PCA Axis 1","PCA Axis 2")],
labels=senator_coordinates$Senator_Name,
cex= 0.5, pos = 3,
col = color_var$color)
#######################
# Factorial Analysis
#######################
#install.packages("plyr")
#install.packages("xlsx")
#install.packages("stringi")
#install.packages("ggplot2")
library(plyr)
library(xlsx)
library(stringi)
library(ggplot2)
disk <- ""
user <- "Nico"
congress_num <- "115"
session <- "1"
setwd(paste(disk, "/Users/", user, "/Dropbox/Nico/Work/Code/Political_Clusters_Project/Input"
, sep = ""))
# Import data
senate_votes <- read.csv(paste("Senate_Votes_", congress_num, "_", session, ".csv", sep = ""))
senate_votes$X <- NULL
nb_votes = dim(senate_votes)[2]-3
sen_info = senate_votes[,c(1:3)]
votes = senate_votes[,c(1, 4:dim(senate_votes)[2])]
# Add 2016 Presidential Results
results_2016 <- read.xlsx("2016_Election_Results.xlsx", 1)
results_2016['State_Winner_2016'] <-
ifelse(results_2016['Trump.pct']>results_2016['Clinton.pct'], "Trump", "Clinton")
results_2016 <- results_2016[,c('State', 'State_Winner_2016')]
sen_info <- merge(sen_info, results_2016, by.x = "Senator_State", by.y = "State", all.x=TRUE)
results_2008 <- read.xlsx("2008_Election_Results.xlsx", 1)
results_2008['State_Winner_2008'] <-
ifelse(results_2008['McCain.pct']>results_2008['Obama.pct'], "McCain", "Obama")
results_2008 <- results_2008[,c('State', 'State_Winner_2008')]
sen_info <- merge(sen_info, results_2008, by.x = "Senator_State", by.y = "State", all.x=TRUE)
sen_info = sen_info[, c('Senator_Name','Senator_Party','Senator_State','State_Winner_2016', 'State_Winner_2008')]
info_vars = dim(sen_info)[2]
data = merge(sen_info, votes, by = "Senator_Name", all = TRUE)
#Exclude Sessions and Strange
data = data[rowSums(abs(data[, c((info_vars+1):dim(senate_votes)[2])]))
> 0.8*nb_votes
,]
#Restrict to Democratic Candidates?
#data <- data[which(data$Senator_Party == "D" | data$Senator_Party == "I"),]
#Restrict to active/projected variables
sen_info <- data[,c(1:info_vars)]
data.active <- data[,-c(1:info_vars)]
scale_factor <- 1
out_factor <- 1
##########################################################################
# All Senators Analysis
##########################################################################
#Scale the matrix
data.scaled.indv <- data.active
#We create the correlation matrix
data.correl.indv <- (1/length(data.active[,1]))*
t(data.scaled.indv)%*%as.matrix(data.scaled.indv)
#Eigen-values and vectors
data.eig.indv <- eigen(data.correl.indv)
eigenvalues.indv <- as.data.frame(data.eig.indv$values
/ sum(data.eig.indv$values))
plot(eigenvalues.indv)
eigenvectors.indv <- as.data.frame(data.eig.indv$vectors)
numberDimension <- 5
axes <- matrix(nrow=numberDimension, ncol=1)
for (i in 1:numberDimension){
axes[i] <- paste("PCA Axis", i)
}
eigenvectors.indv <- eigenvectors.indv[,c(1:numberDimension)]
# New dataset:
c.alpha.indv <- as.matrix(data.scaled.indv) %*% as.matrix(eigenvectors.indv)
colnames(c.alpha.indv) <- axes
senator_coordinates = cbind(sen_info, c.alpha.indv)
# Contribution of the Votes to PCA Axes
d.alpha <- matrix(nrow=length(data.active[1,]), ncol=numberDimension)
for (i in 1:length(data.active[1,])){
for (j in 1:numberDimension){
d.alpha[i,j] <- cor(data.active[,i],c.alpha.indv[,j])
}
}
d.alpha[is.na(d.alpha)] <- 0
colnames(d.alpha) <- axes
contrib.var <- matrix(nrow=length(data.active[1,]),
ncol=numberDimension)
for (i in 1:length(data.active[1,])){
for (j in 1:numberDimension){
contrib.var[i,j] <- (d.alpha[i,j]*d.alpha[i,j])/sum(d.alpha[,j]*d.alpha[,j])
}
}
colnames(contrib.var) <- axes
# Export
setwd(paste(disk
, "/Users/"
, user
, "/Dropbox/Nico/Work/Code/Political_Clusters_Project/Output/Intermediate_Outputs"
, sep = ""))
write.table(senator_coordinates
, file = paste("Senator_Votes_PCA_", congress_num, "_", session, ".csv", sep = "")
, row.names = FALSE)
################################
######  Plot:
################################
party <- data.frame(matrix(ncol = 0, nrow = dim(data)[1]))
party$name = senator_coordinates$Senator_Party
party$color = ifelse(party == "R", "red"
, ifelse(party == "D", "blue"
,ifelse(party == "I", "green"
, "black")))
State_Winner_2016 <- data.frame(matrix(ncol = 0, nrow = dim(data)[1]))
State_Winner_2016$name = senator_coordinates$State_Winner_2016
State_Winner_2016$color = ifelse(State_Winner_2016 == "Trump", "red"
,ifelse(State_Winner_2016 == "Clinton", "blue"
, "black"))
# Choose to color by party or 2016 winner
color_var = party
# Axis 1-2
plot(senator_coordinates[,c("PCA Axis 1","PCA Axis 2")],
col = color_var$color)
text(c.alpha.indv[,c("PCA Axis 1","PCA Axis 2")],
labels=senator_coordinates$Senator_Name,
cex= 0.5, pos = 3,
col = color_var$color)
